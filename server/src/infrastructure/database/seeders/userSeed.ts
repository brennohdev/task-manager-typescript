import "dotenv/config";
import mongoose from "mongoose";
import connectDataBase from "../../config/dataBase";
import UserModel from "../models/userModel";

// Fun√ß√£o principal para rodar a seed
const seedUsers = async () => {
    console.log("üå± Iniciando seed de usu√°rios...");

    try {
    await connectDataBase();

    const session = await mongoose.startSession();
    session.startTransaction();

    // Limpa os usu√°rios existentes
    console.log("üßπ Limpando usu√°rios existentes...");
    await UserModel.deleteMany({}, { session });

    // Lista de usu√°rios de exemplo
    const users = [
        {
        name: "Brenno H.",
        email: "brenno@example.com",
        password: "senha123",
        profilePicture: null,
        currentWorkspace: null, // Ser√° atribu√≠do ap√≥s criarmos workspaces
        isActive: true,
        lastLogin: null,
        },
        {
        name: "Colaborador X",
        email: "colaborador@example.com",
        password: "senha456",
        profilePicture: null,
        currentWorkspace: null,
        isActive: true,
        lastLogin: null,
        },
    ];

    // Salva os usu√°rios
    for (const user of users) {
        const createdUser = new UserModel(user);
        await createdUser.save({ session });
        console.log(`‚úÖ Usu√°rio ${user.email} criado.`);
    }

    await session.commitTransaction();
    session.endSession();

    console.log("‚úÖ Seed de usu√°rios conclu√≠da com sucesso.");
    } catch (error) {
    console.error("‚ùå Erro ao rodar seed de usu√°rios:", error);
    } finally {
    await mongoose.disconnect();
    }
};

seedUsers();
